openapi: 3.0.0
components:
  schemas:
    SignalPushResponse:
      type: object
      properties:
        signalId:
          type: number
      required:
        - signalId
    Problem:
      type: object
      properties:
        type:
          type: string
        status:
          type: number
        title:
          type: string
        correlationId:
          type: string
          nullable: true
        detail:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              detail:
                type: string
            required:
              - code
              - detail
      required:
        - type
        - status
        - title
        - detail
        - errors
    SignalType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
        - SEEDUPDATE
    SignalRequest:
      type: object
      properties:
        signalType:
          $ref: '#/components/schemas/SignalType'
        objectId:
          type: string
        eserviceId:
          type: string
        signalId:
          type: number
        objectType:
          type: string
      required:
        - signalType
        - objectId
        - eserviceId
        - signalId
    Signal:
      type: object
      properties:
        signals:
          type: array
          items:
            $ref: '#/components/schemas/SignalRequest'
        lastSignalId:
          type: number
          nullable: true
      required:
        - signals
  parameters: {}
security:
  - bearerAuth: []
servers:
  - url: /signals
    description: Pull signal data
info:
  title: Pull signal Service API
  version: 1.1.0
  contact:
    name: PagoPA support
    url: https://github.com/pagopa/interop-signalhub-core/issues
    email: Interop-sprint@pagopa.it
  termsOfService: https://docs.pagopa.it/interoperabilita-1/normativa-e-approfondimenti
  license:
    name: ISC
    url: https://opensource.org/license/isc-license-txt
paths:
  /status:
    get:
      description: Should return OK
      summary: Health status endpoint
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: string
                enum:
                  - OK
  /signals:
    post:
      description: Insert a signal
      summary: Push Signal
      parameters:
        - schema:
            type: string
          required: true
          name: authorization
          in: header
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalPushResponse'
        '400':
          description: '400'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: '401'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: '403'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: '500'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /signals/{eserviceId}:
    get:
      description: Retrieve a list o signals on a specific eservice starting from signalId
      summary: Get a list of signals
      parameters:
        - schema:
            type: string
          required: true
          name: eserviceId
          in: path
        - schema:
            type: number
            nullable: true
            minimum: 0
            default: 0
            description: signalId from which to search
          required: false
          name: signalId
          in: query
        - schema:
            type: number
            minimum: 1
            maximum: 100
            default: 10
            description: number of signals to search
          required: false
          name: size
          in: query
        - schema:
            type: string
          required: true
          name: authorization
          in: header
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signal'
        '206':
          description: '206'
          content:
            application/json:
              schema:
                type: object
                properties:
                  signals:
                    type: array
                    items:
                      $ref: '#/components/schemas/SignalRequest'
                  lastSignalId:
                    type: number
                    nullable: true
                required:
                  - signals
